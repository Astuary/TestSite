{"version":3,"sources":["webpack:///./src/pages/works.js"],"names":["WorkIndex","_ref","data","works","allMarkdownRemark","edges","React","createElement","Fragment","Layout","SEO","title","Intro","ContainerLayout","SubTitle","className","map","_ref2","node","frontmatter","fields","slug","WorkPost","key","Link","to","Img","fluid","image","childImageSharp","categories","tag","index","Category","Period","period","Title","style","boxShadow","Text","dangerouslySetInnerHTML","__html","description","excerpt","tags","Tag"],"mappings":"8FAAA,qGAkEeA,UA3DGC,IAAe,IAAd,KAAEC,GAAMD,EACzB,MAAME,EAAQD,EAAKE,kBAAkBC,MAErC,OACEC,IAAAC,cAAAD,IAAAE,SAAA,KACEF,IAAAC,cAACE,IAAM,KACLH,IAAAC,cAACG,IAAG,CAACC,MAAM,oBACXL,IAAAC,cAACK,IAAK,KACJN,IAAAC,cAACM,IAAe,KAEdP,IAAAC,cAACO,IAAQ,CAACC,UAAU,aAAY,gCAIhCT,IAAAC,cAACM,IAAe,CAACE,UAAU,WACxBZ,EAAMa,IAAIC,IAAe,IAAd,KAAEC,GAAMD,EACpB,MAAMN,EAAQO,EAAKC,YAAYR,OAASO,EAAKE,OAAOC,KAClD,OACEf,IAAAC,cAACe,IAAQ,CAACC,IAAKL,EAAKE,OAAOC,MACzBf,IAAAC,cAAA,OAAKQ,UAAU,SACbT,IAAAC,cAAA,OAAKQ,UAAU,iBACbT,IAAAC,cAACiB,OAAI,CAACC,GAAIP,EAAKE,OAAOC,MACpBf,IAAAC,cAACmB,IAAG,CAACC,MAAOT,EAAKC,YAAYS,MAAMC,gBAAgBF,MAAOhB,MAAM,kBAItEL,IAAAC,cAAA,OAAKQ,UAAU,WACbT,IAAAC,cAAA,cACED,IAAAC,cAAA,WACGW,EAAKC,YAAYW,WAAWd,IAAI,CAACe,EAAKC,IAAW1B,IAAAC,cAAC0B,IAAQ,CAACV,IAAKS,GAAQD,KACrEzB,IAAAC,cAAA,WACND,IAAAC,cAAC2B,IAAM,KAAEhB,EAAKC,YAAYgB,QAE1B7B,IAAAC,cAAC6B,IAAK,KACJ9B,IAAAC,cAACiB,OAAI,CAACT,UAAU,0BAA0BsB,MAAO,CAAEC,UAAW,QAAUb,GAAIP,EAAKE,OAAOC,MACrFV,KAILL,IAAAC,cAACgC,IAAI,CACHC,wBAAyB,CACvBC,OAAQvB,EAAKC,YAAYuB,aAAexB,EAAKyB,WAGjDrC,IAAAC,cAAA,WACGW,EAAKC,YAAYyB,KAAK5B,IAAI,CAACe,EAAKC,IAAW1B,IAAAC,cAACsC,IAAG,CAACtB,IAAKS,GAAQD","file":"component---src-pages-works-js-a079529d691848b4a4eb.js","sourcesContent":["import React from \"react\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport { Link, graphql } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\nimport {Tag, ContainerLayout, WorkPost, Category, Intro, SubTitle, Title, Text, Period} from \"../components/common\"\r\n\r\nconst WorkIndex = ({ data }) => {\r\n  const works = data.allMarkdownRemark.edges\r\n\r\n  return (\r\n    <>\r\n      <Layout> \r\n        <SEO title=\"Work Experience\" />\r\n        <Intro>\r\n          <ContainerLayout>\r\n\r\n            <SubTitle className=\"text-dark\">\r\n              Professional Work Experience\r\n            </SubTitle>\r\n\r\n            <ContainerLayout className=\"wrapper\">\r\n              {works.map(({ node }) => {\r\n              const title = node.frontmatter.title || node.fields.slug\r\n                return (\r\n                  <WorkPost key={node.fields.slug}>\r\n                    <div className=\"media\">\r\n                      <div className=\"image-wrapper\">\r\n                        <Link to={node.fields.slug}>\r\n                          <Img fluid={node.frontmatter.image.childImageSharp.fluid} title=\"work title\" />\r\n                        </Link>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"content\">\r\n                      <header>\r\n                        <div>\r\n                          {node.frontmatter.categories.map((tag, index) => (<Category key={index}>{tag}</Category>))}\r\n                        </div><br/>\r\n                        <Period>{node.frontmatter.period}</Period>\r\n                        {/* <Category>{node.frontmatter.category}</Category> */}\r\n                        <Title>\r\n                          <Link className=\"text-primary lined-link\" style={{ boxShadow: `none` }} to={node.fields.slug}>\r\n                            {title}\r\n                          </Link>\r\n                        </Title>\r\n                      </header>\r\n                        <Text\r\n                          dangerouslySetInnerHTML={{\r\n                            __html: node.frontmatter.description || node.excerpt,\r\n                          }}\r\n                        />\r\n                        <div>\r\n                          {node.frontmatter.tags.map((tag, index) => (<Tag key={index}>{tag}</Tag>))}\r\n                        </div>\r\n                    </div>\r\n                  </WorkPost>\r\n                )\r\n              })}\r\n            </ContainerLayout>\r\n          </ContainerLayout>\r\n        </Intro>\r\n      </Layout>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default WorkIndex\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(filter: {fileAbsolutePath: {regex: \"/(works)/\"}}, sort: { fields: [frontmatter___date], order: DESC }) {\r\n      edges {\r\n        node {\r\n          excerpt\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            title\r\n            image {\r\n              childImageSharp {\r\n                fluid(maxWidth: 600, quality: 100) {\r\n                  ...GatsbyImageSharpFluid\r\n                }\r\n              }\r\n            }\r\n            tags\r\n            categories\r\n            period\r\n            description\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`"],"sourceRoot":""}